set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
"Plugin 'edkolev/tmuxline.vim'
Plugin 'bling/vim-airline'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
Plugin 'tpope/vim-sensible'
Plugin 'flazz/vim-colorschemes'
Plugin 'airblade/vim-gitgutter'
Plugin 'chriskempson/base16-vim'
Plugin 'guns/vim-clojure-static'
"Plugin 'guns/vim-clojure-highlight'
Plugin 'kien/rainbow_parentheses.vim'
"Plugin 'tpope/vim-salve.git'
"Plugin 'tpope/vim-projectionist.git'
"Plugin 'tpope/vim-dispatch.git'
Plugin 'tpope/vim-fireplace.git'
Plugin 'ervandew/supertab'
Plugin 'tpope/vim-sexp-mappings-for-regular-people.git'
Plugin 'guns/vim-sexp.git'
Plugin 'tpope/vim-repeat.git'
Plugin 'tpope/vim-surround.git'
Plugin 'kchmck/vim-coffee-script'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'

" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

set gfn=Source\ Code\ Pro\ for\ Powerline:h13
set t_Co=256
let g:solarized_termcolors=256
"let base16colorspace=256
set background=dark
colorscheme apprentice "seoul256
syntax on
"set relativenumber
set nu
set cursorline
set numberwidth=5
set shiftwidth=4
set tabstop=4
set expandtab
set splitbelow
set splitright
set noswapfile
set completeopt=menu,preview
set complete-=t,i
set colorcolumn=80

autocmd BufEnter * set list

let mapleader = ","

" Map Ctrl+Backspace in insert mode to delete back a word
inoremap <C-BS> <C-w>

" Tab configurations for different filetypes --------------------------------
autocmd BufNewFile,BufEnter *.clj,*.c,*.html,*.js,*.coffee,*.json setlocal shiftwidth=2
autocmd BufNewFile,BufEnter Makefile,*.php setlocal noexpandtab
autocmd BufNewFile,BufEnter *.clj set nowrap
autocmd BufNewFile,BufRead *.pp,Vagrantfile set ft=ruby
autocmd BufNewFile,BufRead *.edn set filetype=clojure
autocmd BufNewFile,BufRead *.md set filetype=markdown
autocmd BufNewFile,BufRead *.ino set filetype=c

" ctrlp ----------------------------------------------------------------------
let g:ctrlp_cmd = 'CtrlPLastMode'
let g:ctrlp_custom_ignore = {
    \ 'dir': '\.git$\|\.hg$\|\.venv$\|env$\|build$\|target$\|\.compiled$\|\.awesomo$\|node_modules$\|bower.*$',
    \ 'file': '\.swp$\|\.pyc$',
    \ }
let g:ctrlp_by_filename = 1 " default to filename search instead of full path
let g:ctrlp_regexp = 1 " default to regexp search
let g:ctrlp_working_path_mode = 0

" Syntastic ------------------------------------------------------------------
let g:syntastic_javascript_checkers = ["jslint"]
let g:syntastic_json_checkers = ["jsonlint"]
let g:syntastic_php_checkers = ["php"]

" NerdTree toggle ------------------------------------------------------------
nnoremap <F5> :NERDTreeToggle<CR>

" Background Toggle
map <F6> :let &background = ( &background == "dark"? "light" : "dark" )<CR>
map <F7> :colorscheme apprentice<CR>

" vim-clojure-static ---------------------------------------------------------
let g:clojure_fuzzy_indent = 1
let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let','^fact','^future-fact','^match']
let g:clojure_fuzzy_indent_blacklist = ['-fn$','\v^with-%(meta|out-str|loading-context)$']
let g:clojure_align_multiline_strings = 0
let g:clojure_align_subforms = 1
let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protocol,letfn,fact'

" airline---------------------------------------------------------------------
